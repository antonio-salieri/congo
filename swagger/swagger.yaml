basePath: /api
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Authorize:
    description: Token authorization response
    example:
      access_token: Laudantium tempore voluptatem.
      expires_in: 4.869193e+18
      tenant:
        name: Eum est aut adipisci eaque.
      token_type: Dolorum illo.
      user:
        active: false
        email: Beatae aperiam quo rerum neque beatae consequatur.
        first_name: Sed explicabo id eum eos tempora.
        href: Aliquam id.
        id: 8.8082195e+18
        last_name: Debitis est esse a.
        role: Libero sint cumque voluptatum iste qui molestiae.
        tenant_id: 9.2230895e+18
        validated: false
    properties:
      access_token:
        description: access token
        example: Aut aspernatur excepturi.
        type: string
      expires_in:
        description: Time to expiration in seconds
        example: 1.4238748e+18
        format: int64
        type: integer
      tenant:
        description: tenant
        example:
          name: Sunt et.
        properties:
          name:
            description: name
            example: Ab sit eos.
            type: string
        type: object
      token_type:
        description: type of token
        example: Culpa minima error dolores dolorem tempora.
        type: string
      user:
        description: user
        example:
          active: false
          email: Ut magnam odit nemo numquam.
          first_name: Tempora a odit dolores voluptas quis.
          href: In eos ab porro est exercitationem nisi.
          id: 7.1807367e+18
          last_name: Velit excepturi aut minus nam.
          role: Doloremque blanditiis quo nostrum quo esse.
          tenant_id: 8.7013987e+18
          validated: false
        properties:
          active:
            description: Activation status
            example: false
            type: boolean
          email:
            description: Email address of user
            example: lwz
            format: email
            minLength: 2
            type: string
          first_name:
            description: First name of user
            example: bjyh
            minLength: 2
            type: string
          href:
            description: API href of record
            example: Nisi aspernatur non voluptatibus.
            type: string
          id:
            description: ID of record
            example: 8.769875e+18
            format: int64
            type: integer
          last_name:
            description: Last name of user
            example: j8
            minLength: 2
            type: string
          role:
            description: User's role
            example: Aliquid aut id quia.
            type: string
          tenant_id:
            example: 7.069451e+18
            format: int64
            type: integer
          validated:
            description: Validation status
            example: true
            type: boolean
        type: object
    title: 'Mediatype identifier: application/vnd.authorize+json'
    type: object
  CreateAdminuserPayload:
    properties:
      email:
        minLength: 2
        type: string
      first_name:
        minLength: 2
        type: string
      id:
        format: int64
        type: integer
      last_name:
        minLength: 2
        type: string
      member_id:
        example: 2.591205e+17
        format: int64
        type: integer
      password:
        minLength: 8
        type: string
      role:
        type: string
      validated:
        type: boolean
      validation_code:
        minLength: 8
        type: string
    required:
    - first_name
    - last_name
    - email
    - password
    - role
    title: CreateAdminuserPayload
    type: object
  CreateEventPayload:
    properties:
      name:
        minLength: 2
        type: string
    required:
    - name
    title: CreateEventPayload
    type: object
  CreateSeriesPayload:
    properties:
      name:
        minLength: 2
        type: string
    required:
    - name
    title: CreateSeriesPayload
    type: object
  CreateTenantPayload:
    properties:
      name:
        minLength: 2
        type: string
    required:
    - name
    title: CreateTenantPayload
    type: object
  CreateUserPayload:
    properties:
      email:
        example: qfi
        minLength: 2
        type: string
      first_name:
        minLength: 2
        type: string
      id:
        format: int64
        type: integer
      last_name:
        minLength: 2
        type: string
      password:
        example: 54cbqchb
        minLength: 8
        type: string
      role:
        example: Perferendis velit et atque earum.
        type: string
      validated:
        example: true
        type: boolean
      validation_code:
        example: nu3twswjm
        minLength: 8
        type: string
    required:
    - first_name
    - last_name
    - email
    - password
    - role
    title: CreateUserPayload
    type: object
  Event:
    description: An event is a specific instance of a conference, e.g. GopherCon 2016
    example:
      end_date: 1995-07-17T01:52:26-04:00
      location: Quia similique nihil aliquam.
      name: Ut nihil.
      start_date: 1974-08-17T12:41:28-04:00
    properties:
      end_date:
        description: end_date
        example: 2008-04-08T06:24:33-04:00
        format: date-time
        type: string
      location:
        description: location
        example: Et iure.
        type: string
      name:
        description: name
        example: Corporis eaque sit ut enim qui quia.
        type: string
      start_date:
        description: start_date
        example: 2009-12-13T10:00:31-05:00
        format: date-time
        type: string
    title: 'Mediatype identifier: application/vnd.event+json'
    type: object
  EventCollection:
    example:
    - end_date: 1984-02-12T07:36:31-05:00
      location: Voluptatum saepe odit porro officia harum tenetur.
      name: Aspernatur nemo inventore placeat.
      start_date: 1976-05-31T06:39:48-04:00
    items:
      example:
        end_date: 2016-03-17T07:13:47-04:00
        location: Cupiditate quo molestias dicta excepturi.
        name: Ullam itaque ex eum hic.
        start_date: 2014-09-10T16:20:08-04:00
      properties:
        end_date:
          description: end_date
          example: 2008-04-08T06:24:33-04:00
          format: date-time
          type: string
        location:
          description: location
          example: Et iure.
          type: string
        name:
          description: name
          example: Corporis eaque sit ut enim qui quia.
          type: string
        start_date:
          description: start_date
          example: 2009-12-13T10:00:31-05:00
          format: date-time
          type: string
      type: object
    title: 'Mediatype identifier: application/vnd.event+json; type=collection'
    type: array
  Series:
    description: A series is a recurring event, e.g. GopherCon
    example:
      name: Id reiciendis hic et doloremque voluptatem veniam.
    properties:
      name:
        description: name
        example: Est delectus.
        type: string
    title: 'Mediatype identifier: application/vnd.series+json'
    type: object
  SeriesCollection:
    example:
    - name: Rerum mollitia et sunt.
    - name: Accusantium id tempora facilis.
    - name: Quia tempora ipsum aperiam nihil voluptatem qui.
    items:
      example:
        name: Dolor excepturi.
      properties:
        name:
          description: name
          example: Est delectus.
          type: string
      type: object
    title: 'Mediatype identifier: application/vnd.series+json; type=collection'
    type: array
  Tenant:
    description: Tenant account in Congo
    example:
      name: Recusandae nihil nesciunt voluptatem.
    properties:
      name:
        description: name
        example: Ab sit eos.
        type: string
    title: 'Mediatype identifier: application/vnd.tenant+json'
    type: object
  TenantCollection:
    example:
    - name: Numquam ex minima.
    - name: Ex distinctio dolorem similique.
    items:
      example:
        name: Et qui ut libero cumque aut.
      properties:
        name:
          description: name
          example: Ab sit eos.
          type: string
      type: object
    title: 'Mediatype identifier: application/vnd.tenant+json; type=collection'
    type: array
  UpdateAdminuserPayload:
    properties:
      email:
        minLength: 2
        type: string
      first_name:
        minLength: 2
        type: string
      id:
        format: int64
        type: integer
      last_name:
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
      role:
        type: string
      validated:
        type: boolean
      validation_code:
        minLength: 8
        type: string
    title: UpdateAdminuserPayload
    type: object
  UpdateEventPayload:
    properties:
      name:
        minLength: 2
        type: string
    title: UpdateEventPayload
    type: object
  UpdateSeriesPayload:
    properties:
      name:
        minLength: 2
        type: string
    title: UpdateSeriesPayload
    type: object
  UpdateTenantPayload:
    properties:
      name:
        minLength: 2
        type: string
    title: UpdateTenantPayload
    type: object
  UpdateUserPayload:
    properties:
      email:
        minLength: 2
        type: string
      first_name:
        minLength: 2
        type: string
      id:
        format: int64
        type: integer
      last_name:
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
      role:
        type: string
      validated:
        type: boolean
      validation_code:
        minLength: 8
        type: string
    title: UpdateUserPayload
    type: object
  User:
    description: A user belonging to a member
    example:
      active: false
      email: Molestiae numquam quae ut porro.
      first_name: Quo dolor.
      href: Voluptatem sit neque iusto commodi et quae.
      id: 9.021861e+18
      last_name: Dolores tempora esse impedit.
      role: Itaque praesentium incidunt illo distinctio fugit molestias.
      tenant_id: 8.330531e+18
      validated: false
    properties:
      active:
        description: Activation status
        example: false
        type: boolean
      email:
        description: Email address of user
        example: lwz
        format: email
        minLength: 2
        type: string
      first_name:
        description: First name of user
        example: bjyh
        minLength: 2
        type: string
      href:
        description: API href of record
        example: Nisi aspernatur non voluptatibus.
        type: string
      id:
        description: ID of record
        example: 8.769875e+18
        format: int64
        type: integer
      last_name:
        description: Last name of user
        example: j8
        minLength: 2
        type: string
      role:
        description: User's role
        example: Aliquid aut id quia.
        type: string
      tenant_id:
        example: 7.069451e+18
        format: int64
        type: integer
      validated:
        description: Validation status
        example: true
        type: boolean
    title: 'Mediatype identifier: application/vnd.user+json'
    type: object
  UserCollection:
    example:
    - active: false
      email: Placeat cumque quos praesentium id quis asperiores.
      first_name: Aliquam corporis dolorum nobis nihil.
      href: Quae fuga tempora exercitationem nihil.
      id: 7.4839644e+18
      last_name: Qui molestias nihil.
      role: Expedita et.
      tenant_id: 6.450897e+18
      validated: false
    - active: true
      email: Voluptatem et reprehenderit et ad quo.
      first_name: Blanditiis officiis sint hic ex ea ut.
      href: Dignissimos rerum repellat aut tempora nihil voluptas.
      id: 8.1248096e+17
      last_name: Dolor dolorum sequi corporis non.
      role: Earum ut eum alias voluptatibus dolorem non.
      tenant_id: 7.330815e+18
      validated: true
    items:
      example:
        active: true
        email: Ea aut ipsum dolor tempore voluptatum aut.
        first_name: Consequatur sit autem vel mollitia et maiores.
        href: Dolorum ab officia aut.
        id: 6.6587254e+18
        last_name: Reiciendis aut sit nisi et.
        role: Eum maxime omnis quasi consectetur iusto.
        tenant_id: 6.39976e+18
        validated: false
      properties:
        active:
          description: Activation status
          example: false
          type: boolean
        email:
          description: Email address of user
          example: lwz
          format: email
          minLength: 2
          type: string
        first_name:
          description: First name of user
          example: bjyh
          minLength: 2
          type: string
        href:
          description: API href of record
          example: Nisi aspernatur non voluptatibus.
          type: string
        id:
          description: ID of record
          example: 8.769875e+18
          format: int64
          type: integer
        last_name:
          description: Last name of user
          example: j8
          minLength: 2
          type: string
        role:
          description: User's role
          example: Aliquid aut id quia.
          type: string
        tenant_id:
          example: 7.069451e+18
          format: int64
          type: integer
        validated:
          description: Validation status
          example: true
          type: boolean
      type: object
    title: 'Mediatype identifier: application/vnd.user+json; type=collection'
    type: array
externalDocs:
  description: Getting Started Guide
  url: https://congo.com
host: congo.gopheracademy.com
info:
  contact:
    email: congo
    name: congo
    url: https://congo.com
  description: Congo
  title: Congo
  version: ""
paths:
  /admin/users:
    get:
      description: |
        List all users

        ** Required security scopes**:
      operationId: adminuser#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserCollection'
        "404":
          description: Not Found
      schemes:
      - https
    post:
      description: |
        Record new user

        ** Required security scopes**:
      operationId: adminuser#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateAdminuserPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/admin/users/[0-9]+$
              type: string
      schemes:
      - https
  /admin/users/{userID}:
    delete:
      description: |2


        ** Required security scopes**:
      operationId: adminuser#delete
      parameters:
      - description: 'UserID '
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
    get:
      description: |
        Retrieve user with given id

        ** Required security scopes**:
      operationId: adminuser#show
      parameters:
      - in: path
        name: userID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
      schemes:
      - https
    patch:
      description: |2


        ** Required security scopes**:
      operationId: adminuser#update
      parameters:
      - in: path
        name: userID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateAdminuserPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
  /auth/refresh:
    post:
      description: Obtain a refreshed access token
      operationId: auth#refresh
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Authorize'
      schemes:
      - https
      security:
      - password: []
  /auth/token:
    post:
      description: Obtain an access token
      operationId: auth#token
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Authorize'
      schemes:
      - https
      security:
      - password: []
  /healthz:
    get:
      description: Get Server Status
      operationId: healthz#status
      schemes:
      - https
  /tenants:
    get:
      description: |
        List all tenants

        ** Required security scopes**:
      operationId: tenant#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TenantCollection'
        "404":
          description: Not Found
      schemes:
      - https
    post:
      description: |
        Record new tenant

        ** Required security scopes**:
      operationId: tenant#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateTenantPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/tenants/[0-9]+$
              type: string
      schemes:
      - https
  /tenants/{tenantID}:
    delete:
      description: |2


        ** Required security scopes**:
      operationId: tenant#delete
      parameters:
      - description: Tenant ID
        in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
    get:
      description: |
        Retrieve tenant with given id

        ** Required security scopes**:
      operationId: tenant#show
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tenant'
        "404":
          description: Not Found
      schemes:
      - https
    patch:
      description: |2


        ** Required security scopes**:
      operationId: tenant#update
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateTenantPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
  /tenants/{tenantID}/events:
    get:
      description: |
        List all events

        ** Required security scopes**:
      operationId: event#list
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "404":
          description: Not Found
      schemes:
      - https
    post:
      description: |
        Record new event

        ** Required security scopes**:
      operationId: event#create
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateEventPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/tenants/[0-9]/events/[0-9]+$
              type: string
      schemes:
      - https
  /tenants/{tenantID}/events/{eventID}:
    delete:
      description: |2


        ** Required security scopes**:
      operationId: event#delete
      parameters:
      - description: Event ID
        in: path
        name: eventID
        required: true
        type: integer
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
    get:
      description: Retrieve event with given id
      operationId: event#show
      parameters:
      - in: path
        name: eventID
        required: true
        type: integer
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Event'
        "404":
          description: Not Found
      schemes:
      - https
    patch:
      description: |2


        ** Required security scopes**:
      operationId: event#update
      parameters:
      - in: path
        name: eventID
        required: true
        type: integer
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateEventPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
  /tenants/{tenantID}/series:
    get:
      description: |
        List all series

        ** Required security scopes**:
      operationId: series#list
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SeriesCollection'
        "404":
          description: Not Found
      schemes:
      - https
    post:
      description: |
        Record new series

        ** Required security scopes**:
      operationId: series#create
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateSeriesPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/tenants/[0-9]/series/[0-9]+$
              type: string
      schemes:
      - https
  /tenants/{tenantID}/series/{seriesID}:
    delete:
      description: |2


        ** Required security scopes**:
      operationId: series#delete
      parameters:
      - description: Series ID
        in: path
        name: seriesID
        required: true
        type: integer
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
    get:
      description: |
        Retrieve series with given id

        ** Required security scopes**:
      operationId: series#show
      parameters:
      - in: path
        name: seriesID
        required: true
        type: integer
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Series'
        "404":
          description: Not Found
      schemes:
      - https
    patch:
      description: |2


        ** Required security scopes**:
      operationId: series#update
      parameters:
      - in: path
        name: seriesID
        required: true
        type: integer
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateSeriesPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
  /tenants/{tenantID}/users:
    get:
      description: |
        List all users for a tenant

        ** Required security scopes**:
      operationId: user#list
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserCollection'
        "404":
          description: Not Found
      schemes:
      - https
    post:
      description: |
        Record new user

        ** Required security scopes**:
      operationId: user#create
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateUserPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/tenants/[0-9]+/users/[0-9]+$
              type: string
      schemes:
      - https
  /tenants/{tenantID}/users/{userID}:
    delete:
      description: |2


        ** Required security scopes**:
      operationId: user#delete
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      - description: 'UserID '
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
    get:
      description: |
        Retrieve user with given id

        ** Required security scopes**:
      operationId: user#show
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: path
        name: userID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
      schemes:
      - https
    patch:
      description: |2


        ** Required security scopes**:
      operationId: user#update
      parameters:
      - in: path
        name: tenantID
        required: true
        type: integer
      - in: path
        name: userID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - https
  /validate/{userID}:
    get:
      description: validate user email
      operationId: validate#validate
      parameters:
      - in: path
        name: userID
        required: true
        type: string
      - in: query
        name: v
        required: false
        type: string
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - https
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/User'
schemes:
- https
securityDefinitions:
  jwt:
    description: |2-


      **Token URL**: <a href='https://congo.gopheracademy.com/api/auth/token'>https://congo.gopheracademy.com/api/auth/token</a>
    in: header
    name: Authorization
    type: apiKey
  password:
    description: Use your own password!
    type: basic
swagger: "2.0"
